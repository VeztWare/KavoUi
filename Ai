function warn(text)
    game.StarterGui:SetCore("ChatMakeSystemMessage", {
        Text = "[Vezt]: "..text,
        Color = Color3.fromRGB(255, 0, 200), -- pink color
        Bold = true -- make text bold
    })
end
warn("If You Are A Showcaser Please Contact Me In Discord For Me To Add You, IamHamzaBG#6137")
loadstring(game:HttpGet("https://raw.githubusercontent.com/VeztWare/Vezt/main/VeztLogo.lua"))()
local entity = loadstring(game:HttpGet("https://raw.githubusercontent.com/7GrandDadPGN/VapeV4ForRoblox/main/Libraries/entityHandler.lua", true))()
local function notif(txt)
	game:FindService("StarterGui"):SetCore("SendNotification", {
		Title = "Vezt",
		Text = txt,
		Icon = "rbxassetid://12623478467",
		Duration = 5
	})
end
--META-TABLE
local player = game.Players.LocalPlayer
---@Sounds
 local sound = Instance.new("Sound") sound.Parent = workspace sound.SoundId = "rbxassetid://1570675466" sound:Play()
local kavoUi = loadstring(game:HttpGet("https://raw.githubusercontent.com/VeztWare/KavoUi/main/KavoUi.lua"))()
local window = kavoUi.CreateLib("Vezt(Private)","VeztPur")
---Tabs
local Tab1 = window:NewTab("Info")
local Tab1Section = Tab1:NewSection(game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name)
local Tab2 = window:NewTab("Combat")
local Tab2Section = Tab2:NewSection("Combat Settings")
local Tab3 = window:NewTab("Blatant")
local Tab3Section = Tab3:NewSection("Blatant Settings")
local Tab4 = window:NewTab("Render")
local Tab4Section = Tab4:NewSection("Render Settings")
local Tab5 = window:NewTab("World")
local Tab5Section = Tab5:NewSection("World Settings")
local Tab6 = window:NewTab("Auto Shop")
local Tab6Section = Tab6:NewSection("AutoBuy Armor")
local Tab7 = window:NewTab("Showcasers❤")
local Tab7Section = Tab7:NewSection("Abraham Video Games!")
Tab7Section:NewLabel("HN Blox!")
Tab7Section:NewLabel("FlamingDrey!")
Tab7Section:NewLabel("The Blue Cow!")
Tab7Section:NewLabel("More Will be Added Just Dm me in discord || IamHamzaBG#6137")
---Buttons
Tab1Section:NewLabel("Hello, " ..player.DisplayName.. "!")
Tab1Section:NewLabel("• Fixed NoClickDelay •")
Tab1Section:NewLabel("• Added NoKB •")
Tab1Section:NewLabel("• Added NoBob •")
Tab1Section:NewLabel("• Added AutoSprint •")
Tab1Section:NewLabel("• Added Heat-Speed •")
Tab1Section:NewLabel("• Added AutoReport •")
Tab1Section:NewLabel("• Added Face Target •")
Tab1Section:NewLabel("• Added Nuker •")
local TweenService = game:GetService("TweenService")

local function CFrameAnimate(viewmodel, cframe, time)
    for i,v in ipairs(cframe) do
        local tween = TweenService:Create(viewmodel, TweenInfo.new(time), {C0 = oldweld * v})
        tween:Play()
        tween.Completed:Wait()
    end
end

Tab2Section:NewToggle("KillAura", "?", function()
    local player = game:GetService("Players")
    local lplr = player.LocalPlayer
    local cam = workspace.CurrentCamera
    local KnitClient = debug.getupvalue(require(lplr.PlayerScripts.TS.knit).setup, 6)
    local SwordCont = KnitClient.Controllers.SwordController

    local aura = false
    local DistVal = {["Value"] = _G.Distance}

    -- modify the Aura function to include the animation code
    function Aura()
        for i,v in pairs(game.Players:GetChildren()) do
            if v.Character and v.Name ~= game.Players.LocalPlayer.Name and v.Character:FindFirstChild("HumanoidRootPart") then
                local mag = (v.Character.HumanoidRootPart.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).Magnitude
                if mag <= DistVal["Value"] and v.Team ~= game.Players.LocalPlayer.Team and v.Character:FindFirstChild("Humanoid") then
                    if v.Character.Humanoid.Health > 0 then
                        aura = true
                        SwordCont:swingSwordAtMouse()

                        -- add the animation code here
                        local anim = {
                            CFrame.new(0.7, -0.4, 0.612) * CFrame.Angles(math.rad(285), math.rad(65), math.rad(293)),
                            CFrame.new(0.61, -0.41, 0.6) * CFrame.Angles(math.rad(210), math.rad(70), math.rad(3)),
                        }
                        local viewmodel = workspace.Camera.Viewmodel.RightHand.RightWrist
                        local oldweld = viewmodel.C0
                        CFrameAnimate(viewmodel, anim, 0.2)
                    end
                end
            end
        end
    end

    game:GetService("RunService").Stepped:connect(function()
        Aura()
    end)
end)
Tab2Section:NewSlider("Killaura Distance", "?", 50,14, function(s)
    _G.Distance = s
end)
Tab2Section:NewToggle("Face-Target", "?", function(state)
    if state then
        _G.Face = true
        local maxDistance = 25 -- maximum distance for camera to follow head

        while _G.Face do
            wait(0.5)
            local players = game:GetService("Players"):GetPlayers()
            local nearestDistance = math.huge
            local nearestPlayer

            for _, player in ipairs(players) do
                if player ~= game.Players.LocalPlayer then
                    local character = player.Character
                    if character and character:FindFirstChild("Head") then
                        local distance = (character.Head.Position - workspace.CurrentCamera.CFrame.Position).magnitude
                        if distance <= maxDistance and distance < nearestDistance then
                            nearestDistance = distance
                            nearestPlayer = player
                        end
                    end
                end
            end

            if nearestPlayer then
                local head = nearestPlayer.Character.Head

                while _G.Face do
                    wait(0.0001)
                    if head then
                        local distance = (head.Position - workspace.CurrentCamera.CFrame.Position).magnitude
                        if distance <= maxDistance then
                            workspace.CurrentCamera.CFrame = CFrame.new(workspace.CurrentCamera.CFrame.Position, head.Position)
                        end
                    end
                    if not nearestPlayer.Character or not nearestPlayer.Character:FindFirstChild("Head") or not _G.Face then
                        break
                    end
                end
            end
        end
    else
        _G.Face = false
    end
end)
Tab2Section:NewLabel("Sword Things")
Tab2Section:NewToggle("NoClickDelay", "?", function(state)
  if state then
local SwordCont = require(game:GetService("Players").LocalPlayer.PlayerScripts.TS.controllers.global.combat.sword["sword-controller"]).SwordController
 local ItemTableFunc = require(game:GetService("ReplicatedStorage").TS.item["item-meta"]).getItemMeta
                local ItemTable = debug.getupvalue(ItemTableFunc, 1)
getgenv().funisus = state
        spawn(function()
            if getgenv().funisus and entity.isAlive then
                for i2,v2 in pairs(itemtable) do
                    if type(v2) == "table" and rawget(v2, "sword") then
                        v2.sword.attackSpeed = 0.00000000000000000000000000000001
                    end
                    SwordCont.isClickingTooFast = function() return false end
                    end
            else
            end
        end)
    end
  end)
Tab2Section:NewLabel("Avoid Players")
Tab2Section:NewToggle("AutoJump","?",function(state)
  if state then
  notif("AutoJump Enabled")
    _G.AutoJump = true
    while _G.AutoJump == true do
      wait(0.7)
      game.Players.LocalPlayer.Character.Humanoid.Jump = true
      end
    else
    notif("AutoJump Disabled")
   _G.AutoJump = false
      while _G.AutoJump == true do
        wait()
        game.Players.LocalPlayer.Character.Humanoid.Jump = true
      end
  end
end)
--1299476322
Tab5Section:NewToggle("AntiVoid", "?", function(state)
if state then
_G.AntiVoid = true
local specialpos = (workspace.MapCFrames:FindFirstChild("center") and workspace.MapCFrames.center.Value.p == Vector3.new(77, 11, 35))
        AntiVoidP = Instance.new("Part")
        AntiVoidP.Parent = Workspace
        AntiVoidP.Name = "AntiVoid"
        AntiVoidP.CanCollide = true
        AntiVoidP.Size = Vector3.new(2048, 0.30, 2048)
        AntiVoidP.Anchored = true
        AntiVoidP.Transparency = 0.4
        AntiVoidP.Position = Vector3.new(0, 30.5, 0)
        else
        _G.AntiVoid = false
      AntiVoidP:Destroy()
      end
end)
Tab4Section:NewToggle("Fov","?",function(state)
if state then
_G.Fov = true
while _G.Fov == true do
wait()
game.Workspace.CurrentCamera.FieldOfView = 120
end
else
_G.Fov = false
while _G.Fov == true do
wait()
game.Workspace.CurrentCamera.FieldOfView = 90
end
end
end)
Tab6Section:NewToggle("Auto Leather Armor","?",function(state)
if state then
_G.AutoLeatherArmor = true
while _G.AutoLeatherArmor == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["itemType"] = "leather_chestplate",
            ["price"] = 50,
            ["customDisplayName"] = "Leather Armor",
            ["currency"] = "iron",
            ["category"] = "Combat",
            ["amount"] = 1,
            ["ignoredByKit"] = {
                [1] = "bigman"
            },
            ["spawnWithItems"] = {
                [1] = "leather_helmet",
                [2] = "leather_chestplate",
                [3] = "leather_boots"
            },
            ["nextTier"] = "iron_chestplate"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
else
_G.AutoLeatherArmor = false
while _G.AutoLeatherArmor == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["itemType"] = "leather_chestplate",
            ["price"] = 50,
            ["customDisplayName"] = "Leather Armor",
            ["currency"] = "iron",
            ["category"] = "Combat",
            ["amount"] = 1,
            ["ignoredByKit"] = {
                [1] = "bigman"
            },
            ["spawnWithItems"] = {
                [1] = "leather_helmet",
                [2] = "leather_chestplate",
                [3] = "leather_boots"
            },
            ["nextTier"] = "iron_chestplate"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
end
end)
Tab6Section:NewToggle("Auto Iron Armor","?",function(state)
if state then
_G.AutoLeatherArmor = true
while _G.AutoLeatherArmor == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["itemType"] = "iron_chestplate",
            ["price"] = 120,
            ["prevTier"] = "leather_chestplate",
            ["customDisplayName"] = "Iron Armor",
            ["currency"] = "iron",
            ["amount"] = 1,
            ["category"] = "Combat",
            ["tiered"] = true,
            ["ignoredByKit"] = {
                [1] = "bigman"
            },
            ["spawnWithItems"] = {
                [1] = "iron_helmet",
                [2] = "iron_chestplate",
                [3] = "iron_boots"
            },
            ["nextTier"] = "diamond_chestplate"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
else
_G.AutoIronArmor = false
while _G.AutoIronArmor == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["itemType"] = "iron_chestplate",
            ["price"] = 120,
            ["prevTier"] = "leather_chestplate",
            ["customDisplayName"] = "Iron Armor",
            ["currency"] = "iron",
            ["amount"] = 1,
            ["category"] = "Combat",
            ["tiered"] = true,
            ["ignoredByKit"] = {
                [1] = "bigman"
            },
            ["spawnWithItems"] = {
                [1] = "iron_helmet",
                [2] = "iron_chestplate",
                [3] = "iron_boots"
            },
            ["nextTier"] = "diamond_chestplate"
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
end
end)
Tab6Section:NewLabel("Auto Axe")
Tab6Section:NewToggle("Auto Iron Axe","?",function(state)
if state then
_G.AutoIronAxe = true
while _G.AutoIronAxe == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["itemType"] = "iron_axe",
            ["price"] = 30,
            ["prevTier"] = "stone_axe",
            ["nextTier"] = "diamond_axe",
            ["currency"] = "iron",
            ["disabledInQueue"] = {
                [1] = "tnt_wars"
            },
            ["category"] = "Tools",
            ["tiered"] = true,
            ["ignoredByKit"] = {
                [1] = "miner"
            },
            ["spawnWithItems"] = {
                [1] = "iron_axe"
            },
            ["amount"] = 1
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
else
_G.AutoIronAxe = false
while _G.AutoIronAxe == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["itemType"] = "iron_axe",
            ["price"] = 30,
            ["prevTier"] = "stone_axe",
            ["nextTier"] = "diamond_axe",
            ["currency"] = "iron",
            ["disabledInQueue"] = {
                [1] = "tnt_wars"
            },
            ["category"] = "Tools",
            ["tiered"] = true,
            ["ignoredByKit"] = {
                [1] = "miner"
            },
            ["spawnWithItems"] = {
                [1] = "iron_axe"
            },
            ["amount"] = 1
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
end
end)
Tab6Section:NewLabel("Auto Swords")
Tab6Section:NewToggle("Auto IronSword","?",function(state)
if state then
game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Vezt"; Text = "AutoSword[iron] Enabled"; Duration = 1; })
_G.AutoIronSword = true
while _G.AutoIronSword == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["disabledInQueue"] = {
                [1] = "tnt_wars"
            },
            ["itemType"] = "iron_sword",
            ["amount"] = 1,
            ["price"] = 70,
            ["ignoredByKit"] = {
                [1] = "barbarian",
                [2] = "dasher",
                [3] = "frost_hammer_kit"
            },
            ["category"] = "Combat",
            ["currency"] = "iron"
        }
    }
}
game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.BedwarsPurchaseItem:InvokeServer(unpack(args))
end
else
game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Vezt"; Text = "AutoSword[iron] Disabled"; Duration = 1; })
_G.AutoIronSword = false
while _G.AutoIronSword == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["lockAfterPurchase"] = true,
            ["disabledInQueue"] = {
                [1] = "tnt_wars"
            },
            ["itemType"] = "iron_sword",
            ["amount"] = 1,
            ["price"] = 70,
            ["ignoredByKit"] = {
                [1] = "barbarian",
                [2] = "dasher",
                [3] = "frost_hammer_kit"
            },
            ["category"] = "Combat",
            ["currency"] = "iron"
        }
    }
}
game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.BedwarsPurchaseItem:InvokeServer(unpack(args))
end
end
end)
Tab4Section:NewButton("Cape","?",function()
game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Vezt"; Text = "Cape XD"; Duration = 1; })
local player = game:GetService("Players")
local lplr = player.LocalPlayer
if lplr.Character.Humanoid.RigType == Enum.HumanoidRigType.R15 then
      if lplr.Character:FindFirstChild("Torso") then
        torso = lplr.Character.Torso
      else
        torso = lplr.Character.UpperTorso
      end
      local CapeP = Instance.new("Part", torso.Parent)
      CapeP.Name = "Cape"
      CapeP.Anchored = false
      CapeP.CanCollide = false
      CapeP.TopSurface = 0
      CapeP.BottomSurface = 0
      CapeP.Color = Color3.fromRGB(0,0,0)
      CapeP.FormFactor = "Custom"
      CapeP.Size = Vector3.new(0.2,0.2,0.2)
      local decal = Instance.new("Decal", CapeP)
      decal.Texture = "http://www.roblox.com/asset/?id=12775229703"
      decal.Face = "Back"
      local msh = Instance.new("BlockMesh", CapeP)
      msh.Scale = Vector3.new(9,17.5,0.5)
      local motor = Instance.new("Motor", CapeP)
      motor.Part0 = CapeP
      motor.Part1 = torso
      motor.MaxVelocity = 0.01
      motor.C0 = CFrame.new(0,1.75,0) * CFrame.Angles(0,math.rad(90),0)
      motor.C1 = CFrame.new(0,1,0.45) * CFrame.Angles(0,math.rad(90),0)
      local wave = false
      repeat wait(1/44)
        decal.Transparency = torso.Transparency
        local ang = 0.1
        local oldmag = torso.Velocity.magnitude
        local mv = 0.002
        if wave then
          ang = ang + ((torso.Velocity.magnitude/10) * 0.05) + 0.05
          wave = false
        else
          wave = true
        end
        ang = ang + math.min(torso.Velocity.magnitude/11, 0.5)
        motor.MaxVelocity = math.min((torso.Velocity.magnitude/111), 0.04) + mv
        motor.DesiredAngle = -ang
        if motor.CurrentAngle < -0.2 and motor.DesiredAngle > -0.2 then
          motor.MaxVelocity = 0.04
        end
        repeat wait() until motor.CurrentAngle == motor.DesiredAngle or math.abs(torso.Velocity.magnitude - oldmag) >= (torso.Velocity.magnitude/10) +
1
        if torso.Velocity.magnitude < 0.1 then
          wait(0.1)
        end
      until not CapeP or CapeP.Parent ~= torso.Parent
    end
end)
Tab3Section:NewToggle("Fly","AntiCheated",function(state)
  if state then
game.Workspace.Gravity = 0
else
game.Workspace.Gravity = 168.2
end
end)
Tab4Section:NewButton("Tracers", "?", function()
loadstring(game:HttpGet("https://pastebin.com/raw/57uQDwt7"))()
end)
Tab3Section:NewToggle("Speed", "?", function(state)
if state then
_G.speed = true
while _G.speed == true do
wait()
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 23
end
else
_G.speed = false
while _G.speed == true do
wait()
game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = 16
end
end
end)
Tab4Section:NewToggle("ChatSpammer", "?", function(state) 
if state then
game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Vezt"; Text = "ChatSpammer Enabled"; Duration = 1; })
_G.Spam = true
while _G.Spam == true do
wait(1)
local args = {
    [1] = "Vezt On Top",
    [2] = "All"
}
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
end
else
game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Vezt"; Text = "Chat Spammer Disabled"; Duration = 1; })
_G.Spam = false
while _G.Spam == true do
wait(1)
local args = {
    [1] = "Vezt On Top",
    [2] = "All"
}
game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(unpack(args))
end
end
end)
Tab3Section:NewButton("inf jump","?",function()
game:GetService("StarterGui"):SetCore("SendNotification",{ Title = "Vezt"; Text = "You Cant Disable Inf Jump"; Duration = 1; })
loadstring(game:HttpGet("https://pastebin.com/raw/bC97eAyR", true))()
end)
Tab4Section:NewToggle("AutoToxic","?",function()
loadstring(game:HttpGet("https://pastebin.com/raw/044yS1wu"))()
wait(0.1)
loadstring(game:HttpGet("https://pastebin.com/raw/h2hAFDR5"))()
wait(0.1)
loadstring(game:HttpGet("https://pastebin.com/raw/VaM0TkiM"))()
wait(0.1)
loadstring(game:HttpGet("https://pastebin.com/raw/688FYBmd"))()
wait(0.1)
loadstring(game:HttpGet("https://pastebin.com/raw/apn1Lr7k"))()
end)
Tab6Section:NewToggle("AutoStoneSword","?",function(state)
if state then
_G.AutoStoneSword = true 
while _G.AutoStoneSword == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["disabledInQueue"] = {
                [1] = "tnt_wars"
            },
            ["itemType"] = "stone_sword",
            ["price"] = 20,
            ["superiorItems"] = {
                [1] = "iron_sword"
            },
            ["currency"] = "iron",
            ["amount"] = 1,
            ["ignoredByKit"] = {
                [1] = "barbarian",
                [2] = "dasher",
                [3] = "frost_hammer_kit"
            },
            ["category"] = "Combat",
            ["lockAfterPurchase"] = true
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
else
_G.AutoStoneSword = false
while _G.AutoStoneSword == true do
wait()
local args = {
    [1] = {
        ["shopItem"] = {
            ["disabledInQueue"] = {
                [1] = "tnt_wars"
            },
            ["itemType"] = "stone_sword",
            ["price"] = 20,
            ["superiorItems"] = {
                [1] = "iron_sword"
            },
            ["currency"] = "iron",
            ["amount"] = 1,
            ["ignoredByKit"] = {
                [1] = "barbarian",
                [2] = "dasher",
                [3] = "frost_hammer_kit"
            },
            ["category"] = "Combat",
            ["lockAfterPurchase"] = true
        }
    }
}

game:GetService("ReplicatedStorage"):WaitForChild("rbxts_include"):WaitForChild("node_modules"):WaitForChild("@rbxts"):WaitForChild("net"):WaitForChild("out"):WaitForChild("_NetManaged"):WaitForChild("BedwarsPurchaseItem"):InvokeServer(unpack(args))
end
end
end)
Tab3Section:NewButton("Reach","?",function()
loadstring(game:HttpGet("https://pastebin.com/raw/QWZX3uW9"))()
end)
Tab5Section:NewToggle("No Fall Damage","?",function()
while wait() do
game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.GroundHit:FireServer()
end
end)
Tab4Section:NewToggle("NoBob","?",function(state)
if state then
local lplr = game.Players.LocalPlayer
lplr.PlayerScripts.TS.controllers.global.viewmodel["viewmodel-controller"]:SetAttribute("ConstantManager_DEPTH_OFFSET", -(30 / 10))
			lplr.PlayerScripts.TS.controllers.global.viewmodel["viewmodel-controller"]:SetAttribute("ConstantManager_HORIZONTAL_OFFSET", (8 / 30))
		else
			lplr.PlayerScripts.TS.controllers.global.viewmodel["viewmodel-controller"]:SetAttribute("ConstantManager_DEPTH_OFFSET", -(8 / 10))
			lplr.PlayerScripts.TS.controllers.global.viewmodel["viewmodel-controller"]:SetAttribute("ConstantManager_HORIZONTAL_OFFSET", (8 / 10))
		end
	end)
Tab5Section:NewToggle("NoKnockBack","?",function(state)
	if state then
	debug.getupvalue(require(game.ReplicatedStorage.TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1)["kbDirectionStrength"] = 0
	debug.getupvalue(require(game.ReplicatedStorage.TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1)["kbUpwardStrength"] = 0
		else
	debug.getupvalue(require(game.ReplicatedStorage.TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1)["kbDirectionStrength"] = 100
	debug.getupvalue(require(game.ReplicatedStorage.TS.damage["knockback-util"]).KnockbackUtil.calculateKnockbackVelocity, 1)["kbUpwardStrength"] = 100
		end
	end)
Tab3Section:NewToggle("Heat Speed","?",function(state)
	if state then
	local lplr = game.Players.LocalPlayer
			lplr.Character.Humanoid.WalkSpeed = 12
			_G.Speedddd11 = true
			while _G.Speedddd11 do
					--game.Players.LocalPlayer.Character.Humanoid:ChangeState(3)
					for i =1,4 do
						wait()
						lplr.Character.HumanoidRootPart.CFrame = lplr.Character.HumanoidRootPart.CFrame + lplr.Character.HumanoidRootPart.CFrame.lookVector * 1.2
					end
	
					for i =1,2 do
						wait()
						lplr.Character.HumanoidRootPart.CFrame = lplr.Character.HumanoidRootPart.CFrame + lplr.Character.HumanoidRootPart.CFrame.lookVector * 0.6
					end
					for i =1,1 do
						wait()
						lplr.Character.HumanoidRootPart.CFrame = lplr.Character.HumanoidRootPart.CFrame + lplr.Character.HumanoidRootPart.CFrame.lookVector * 0.4
					end
					for i =1,4 do
						wait()
						lplr.Character.HumanoidRootPart.CFrame = lplr.Character.HumanoidRootPart.CFrame + lplr.Character.HumanoidRootPart.CFrame.lookVector * 0.2
					end
			end
		else
			_G.Speedddd11 = false
			lplr.Character.Humanoid.WalkSpeed = 23
		end
	end)
Tab3Section:NewToggle("AutoSprint","?",function(state)
if state then
notif("AutoSprint Enabled")
	_G.AutoSprint = true
	while _G.AutoSprint == true do
	wait()
	local KnitClient = debug.getupvalue(require(game.Players.LocalPlayer.PlayerScripts.TS.knit).setup, 6)
local sprinttable = KnitClient.Controllers.SprintController
if not sprinttable.sprinting then
				sprinttable:startSprinting()
			end
			end
			else
			notif("AutoSprint Disabled")
			_G.AutoSprint = false
			end
			end)
Tab3Section:NewToggle("AutoReport","?",function(state)
if state then
			local playersToReport = game:GetService("Players"):GetPlayers()

for _, player in ipairs(playersToReport) do
    local reportId = player.UserId

    game:GetService("ReplicatedStorage")
        :WaitForChild("rbxts_include")
        :WaitForChild("node_modules")
        :WaitForChild("@rbxts")
        :WaitForChild("net")
        :WaitForChild("out")
        :WaitForChild("_NetManaged")
        :WaitForChild("ReportPlayer")
        :FireServer(player, reportId)
    
    local message = "AutoReported, " .. player.DisplayName .. " || Vezt On Top"
    game:GetService("ReplicatedStorage")
        :WaitForChild("DefaultChatSystemChatEvents")
        :WaitForChild("SayMessageRequest")
        :FireServer(message, "All")
    
    wait(1)
end
else
print(reportId)
end
end)
local nukerEnabled = false
Tab5Section:NewToggle("Nuker","?",function(state)
    nukerEnabled = state
    local lplr = game.Players.LocalPlayer
local Distance = {["Value"] = 30}

function isalive(plr)
    plr = plr or lplr
    if not plr.Character then return false end
    if not plr.Character:FindFirstChild("Head") then return false end
    if not plr.Character:FindFirstChild("Humanoid") then return false end
    return true
end

function getbeds()
    local beds = {}
    for i,v in pairs(game:GetService("Workspace"):GetChildren()) do
        if string.lower(v.Name) == "bed" and v:FindFirstChild("Covers") ~= nil and v:FindFirstChild("Covers").Color ~= lplr.Team.TeamColor then
            table.insert(beds,v)
        end
    end
    return beds
end

function getserverpos(Position)
    local x = math.round(Position.X/3)
    local y = math.round(Position.Y/3)
    local z = math.round(Position.Z/3)
    return Vector3.new(x,y,z)
end
    if nukerEnabled then
        spawn(function()
            repeat
                task.wait(0.1)
                if isalive(lplr) and lplr.Character:FindFirstChild("Humanoid").Health > 0.1 then
                    local beds = getbeds()
                    for i,v in pairs(beds) do
                        local mag = (v.Position - lplr.Character:FindFirstChild("HumanoidRootPart").Position).Magnitude
                        if mag < Distance["Value"] then
                            game:GetService("ReplicatedStorage").rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.DamageBlock:InvokeServer({
                                ["blockRef"] = {
                                    ["blockPosition"] = getserverpos(v.Position)
                                },
                                ["hitPosition"] = getserverpos(v.Position),
                                ["hitNormal"] = getserverpos(v.Position)
                            })
                        end
                    end
                end
            until not nukerEnabled
        end)
    else
        Enabled = false
    end
end)
Tab5Section:NewButton("Animation-Hub","?",function()
loadstring(game:HttpGet("https://raw.githubusercontent.com/VeztWare/Vezt/main/Vezt-Animations.lua"))()
end)
